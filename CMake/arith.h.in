#ifndef CONFIG_ARITH_H
#define CONFIG_ARITH_H

#include <limits>

#define DCMTK_SIGNED_CHAR_DIGITS10 std::numeric_limits<signed char>::digits10
#define DCMTK_UNSIGNED_CHAR_DIGITS10 std::numeric_limits<unsigned char>::digits10
#define DCMTK_SIGNED_SHORT_DIGITS10 std::numeric_limits<signed short>::digits10
#define DCMTK_UNSIGNED_SHORT_DIGITS10 std::numeric_limits<unsigned short>::digits10
#define DCMTK_SIGNED_INT_DIGITS10 std::numeric_limits<signed int>::digits10
#define DCMTK_UNSIGNED_INT_DIGITS10 std::numeric_limits<unsigned int>::digits10
#define DCMTK_SIGNED_LONG_DIGITS10 std::numeric_limits<signed long>::digits10
#define DCMTK_UNSIGNED_LONG_DIGITS10 std::numeric_limits<unsigned long>::digits10
#define DCMTK_FLOAT_MAX_DIGITS10 std::numeric_limits<float>::max_digits10
#define DCMTK_DOUBLE_MAX_DIGITS10 std::numeric_limits<double>::max_digits10
#define DCMTK_CHAR_TRAPS std::numeric_limits<char>::traps
#define DCMTK_CHAR_MODULO std::numeric_limits<char>::is_modulo
#define DCMTK_SIGNED_CHAR_TRAPS std::numeric_limits<signed char>::traps
#define DCMTK_SIGNED_CHAR_MODULO std::numeric_limits<signed char>::is_modulo
#define DCMTK_UNSIGNED_CHAR_TRAPS std::numeric_limits<unsigned char>::traps
#define DCMTK_UNSIGNED_CHAR_MODULO std::numeric_limits<unsigned char>::is_modulo
#define DCMTK_SIGNED_SHORT_TRAPS std::numeric_limits<signed short>::traps
#define DCMTK_SIGNED_SHORT_MODULO std::numeric_limits<signed short>::is_modulo
#define DCMTK_UNSIGNED_SHORT_TRAPS std::numeric_limits<unsigned short>::traps
#define DCMTK_UNSIGNED_SHORT_MODULO std::numeric_limits<unsigned short>::is_modulo
#define DCMTK_SIGNED_INT_TRAPS std::numeric_limits<signed int>::traps
#define DCMTK_SIGNED_INT_MODULO std::numeric_limits<signed int>::is_modulo
#define DCMTK_UNSIGNED_INT_TRAPS std::numeric_limits<unsigned int>::traps
#define DCMTK_UNSIGNED_INT_MODULO std::numeric_limits<unsigned int>::is_modulo
#define DCMTK_SIGNED_LONG_TRAPS std::numeric_limits<signed long>::traps
#define DCMTK_SIGNED_LONG_MODULO std::numeric_limits<signed long>::is_modulo
#define DCMTK_UNSIGNED_LONG_TRAPS std::numeric_limits<unsigned long>::traps
#define DCMTK_UNSIGNED_LONG_MODULO std::numeric_limits<unsigned long>::is_modulo
#define DCMTK_FLOAT_TRAPS std::numeric_limits<float>::traps
#define DCMTK_DOUBLE_TRAPS std::numeric_limits<double>::traps
#define DCMTK_FLOAT_HAS_INFINITY std::numeric_limits<float>::has_infinity
#define DCMTK_FLOAT_INFINITY std::numeric_limits<float>::infinity
#define DCMTK_DOUBLE_HAS_INFINITY std::numeric_limits<double>::has_infinity
#define DCMTK_DOUBLE_INFINITY std::numeric_limits<double>::infinity
#define DCMTK_FLOAT_HAS_QUIET_NAN std::numeric_limits<float>::has_quiet_NaN
#define DCMTK_FLOAT_QUIET_NAN std::numeric_limits<float>::quiet_NaN
#define DCMTK_DOUBLE_HAS_QUIET_NAN std::numeric_limits<double>::has_quiet_NaN
#define DCMTK_DOUBLE_QUIET_NAN std::numeric_limits<double>::quiet_NaN
#define DCMTK_FLOAT_HAS_SIGNALING_NAN std::numeric_limits<float>::has_signaling_NaN
#define DCMTK_FLOAT_SIGNALING_NAN std::numeric_limits<float>::signaling_NaN
#define DCMTK_DOUBLE_HAS_SIGNALING_NAN std::numeric_limits<double>::has_signaling_NaN
#define DCMTK_DOUBLE_SIGNALING_NAN std::numeric_limits<double>::signaling_NaN
#define DCMTK_FLOAT_IS_IEC559 std::numeric_limits<float>::is_iec559
#define DCMTK_DOUBLE_IS_IEC559 std::numeric_limits<double>::is_iec559
#define DCMTK_FLOAT_HAS_DENORM std::numeric_limits<float>::has_denorm
#define DCMTK_FLOAT_DENORM_MIN std::numeric_limits<float>::denorm_min
#define DCMTK_DOUBLE_HAS_DENORM std::numeric_limits<double>::has_denorm
#define DCMTK_DOUBLE_DENORM_MIN std::numeric_limits<double>::denorm_min
#define DCMTK_FLOAT_TINYNESS_BEFORE std::numeric_limits<float>::tinyness_before
#define DCMTK_DOUBLE_TINYNESS_BEFORE std::numeric_limits<double>::tinyness_before
#define DCMTK_FLOAT_HAS_DENORM_LOSS std::numeric_limits<float>::has_denorm_loss
#define DCMTK_DOUBLE_HAS_DENORM_LOSS std::numeric_limits<double>::has_denorm_loss
#define DCMTK_ROUND_STYLE std::numeric_limits<float>::round_style

#endif // CONFIG_ARITH_H
